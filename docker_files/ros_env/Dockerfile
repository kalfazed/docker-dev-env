FROM ubuntu:22.04

# Re-declare ARG after FROM to use in RUN commands
ARG ROS_DISTRO=humble

SHELL ["/bin/bash", "-c"]

# Set timezone and locale
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC
ENV LANG=en_US.UTF-8

# Install dependencies
RUN apt update && \
    apt install -y --no-install-recommends \
        software-properties-common \
        tzdata \
        locales \
        curl \
        ca-certificates \
        python3 \
        python3-pip \
        libpython3.10 \
        build-essential \
        pkg-config \
        cmake && \
    ln -fs /usr/share/zoneinfo/$TZ /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata && \
    locale-gen en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install ROS2 repository
RUN curl -sSL https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -Po '"tag_name": "\K.*?(?=")' > /tmp/ros_apt_version && \
    curl -sSL "https://github.com/ros-infrastructure/ros-apt-source/releases/download/$(cat /tmp/ros_apt_version)/ros2-apt-source_$(cat /tmp/ros_apt_version).jammy_all.deb" -o /tmp/ros2-apt-source.deb && \
    apt update && \
    apt install -y /tmp/ros2-apt-source.deb && \
    rm /tmp/ros2-apt-source.deb /tmp/ros_apt_version && \
    apt update && \
    apt install -y --no-install-recommends \
        ros-${ROS_DISTRO}-ros-core \
        ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
        ros-${ROS_DISTRO}-rosbag2-storage-mcap \
        ros-${ROS_DISTRO}-rosbag2 \
        ros-dev-tools \
        python3-rosdep && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set up arguments for the user and group ID to match the host user
RUN sed -i 's|http://archive.ubuntu.com/ubuntu/|http://mirrors.tuna.tsinghua.edu.cn/ubuntu/|g' /etc/apt/sources.list && \
    sed -i 's|http://security.ubuntu.com/ubuntu/|http://mirrors.tuna.tsinghua.edu.cn/ubuntu/|g' /etc/apt/sources.list

ARG SHELLNAME
ARG USERNAME
ARG USERID
ARG GROUPID

# Create a group and user with specified UID and GID, matching the host
RUN groupadd --gid ${GROUPID} ${USERNAME} && \
    useradd -m --uid ${USERID} --gid ${GROUPID} -s /bin/bash ${USERNAME} && \
    usermod -aG sudo ${USERNAME} && \
    echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    echo "${USERNAME} ALL=(ALL) NOPASSWD:/usr/bin/chsh" >> /etc/sudoers

# Set password as 111
RUN echo "${USERNAME}:111" | chpasswd

# Be able to ssh
EXPOSE 22

# Create a Package directory in the user's home directory
RUN mkdir -p /home/${USERNAME}/Packages

# Copy "my_dot_file" from the build context to the Package directory
COPY my_dot_files /home/${USERNAME}/.dot_files
RUN chown -R ${USERNAME} /home/${USERNAME}/.dot_files

# Switch to user
USER ${USERNAME}

# Install development environment
WORKDIR /home/${USERNAME}/.dot_files
RUN bash install.sh ${SHELLNAME}

# Install miniconda
RUN mkdir -p /home/${USERNAME}/miniconda3 && \
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/${USERNAME}/miniconda3/miniconda.sh && \
    bash /home/${USERNAME}/miniconda3/miniconda.sh -b -u -p /home/${USERNAME}/miniconda3 && \
    rm /home/${USERNAME}/miniconda3/miniconda.sh && \
    /home/${USERNAME}/miniconda3/bin/conda init --all

# Set the working directory to the new user's home directory
WORKDIR /home/${USERNAME}

# Switch back to root
USER root

# Copy entrypoint
RUN apt-get update 
RUN apt-get install -y openssh-server fish

ADD entrypoint.sh /
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]











# WORKDIR /opt/drs
# COPY src/ /opt/drs/src/

# # Initialize rosdep and install dependencies
# RUN rosdep init && \
#     rosdep update && \
#     apt update && \
#     source /opt/ros/${ROS_DISTRO}/setup.bash && \
#     colcon list --packages-up-to bag_manipulate | awk '{print $2}' | xargs rosdep install -iry --from-paths && \
#     apt-get clean && \
#     rm -rf /var/lib/apt/lists/*

# # Build ROS packages
# RUN source /opt/ros/${ROS_DISTRO}/setup.bash && \
#     colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo --packages-up-to bag_manipulate

# ENV ROS_DISTRO=humble

# # Copy entrypoint
# ADD docker/entrypoint.sh /
# RUN chmod +x /entrypoint.sh

# ENTRYPOINT ["/entrypoint.sh"]
